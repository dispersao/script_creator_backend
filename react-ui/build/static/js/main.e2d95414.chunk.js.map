{"version":3,"sources":["../../fountain-parser/client/src/schema/sequence.js","../../fountain-parser/client/src/schema/script.js","../../fountain-parser/client/src/selectors/index.js","../../fountain-parser/client/src/actions/scripts.js","../../fountain-parser/client/src/actions/sequences.js","../../fountain-parser/client/src/reducers/sequenceData.js","../../fountain-parser/client/src/reducers/scriptData.js","../../fountain-parser/client/src/reducers/sequenceFilters.js","../../fountain-parser/client/src/reducers/index.js","../../fountain-parser/client/src/utils/immutableToJS.js","../../fountain-parser/client/src/components/scriptName.js","../../fountain-parser/client/src/components/scriptAuthor.js","../../fountain-parser/client/src/components/scriptHeader.js","../../fountain-parser/client/src/components/sequenceCharacter.js","../../fountain-parser/client/src/components/sequenceCharactersList.js","../../fountain-parser/client/src/components/part.js","../../fountain-parser/client/src/components/partsList.js","../../fountain-parser/client/src/components/sequence.js","../../fountain-parser/client/src/components/sequencesList.js","../../fountain-parser/client/src/components/scriptView.js","../../fountain-parser/client/src/components/draggableSequence.js","../../fountain-parser/client/src/components/draggableSequenceList.js","../../fountain-parser/client/src/components/sequenceFilterIds.js","../../fountain-parser/client/src/components/sequenceFilterBoolean.js","../../fountain-parser/client/src/components/sequenceFilter.js","../../fountain-parser/client/src/components/sequenceFilters.js","../../fountain-parser/client/src/components/fullSequencesList.js","../../fountain-parser/client/src/components/scriptEditSequence.js","../../fountain-parser/client/src/components/dropSequenceArea.js","../../fountain-parser/client/src/components/scriptEditSequenceList.js","../../fountain-parser/client/src/components/scriptEdit.js","../../fountain-parser/client/src/components/scriptCard.js","../../fountain-parser/client/src/components/scriptList.js","../../fountain-parser/client/src/components/home.js","../../fountain-parser/client/src/router/index.js","../../fountain-parser/client/src/index.js"],"names":["characterSchema","schema","Entity","locationSchema","typeSchema","partSchema","characters","sequencesListSchema","location","type","parts","scriptsListSchema","normalizeScriptData","data","normalize","getSequences","state","sequenceData","get","getParts","getCharacters","getLocations","getTypes","getScripts","scriptData","getCurrentScriptId","getScriptSequences","getEntryListByname","name","getSequenceFilterByName","sequenceFilters","memoizedCharacters","createSelector","sequence","chars","map","pid","toString","flatMap","c","valueSeq","toArray","toSet","toList","getFilteredSequences","sequences","locations","types","filters","scripts","currentScript","scriptSeqs","size","sort","a","b","filter","keySeq","every","filterName","field","filterField","getIn","some","sid","mountSequence","getCurrentScriptFormatted","scriptId","scriptSequences","script","Map","id","author","seqId","index","seq","charId","partId","p","caracters","set","filterIds","shouldInclude","includes","changeScriptData","value","payload","fetchScriptsIfNeeded","dispatch","getState","fetch","headers","Accept","Content-Type","then","res","json","console","log","setCurrentScriptId","setCurrentScript","fetchSequences","receiveSequences","fetchSequencesifNeeded","initialSequencesState","fromJS","loading","reducer","arguments","length","undefined","action","mergeDeep","entities","initialScriptState","_ref","newSeqList","insert","setIn","includeNewSequenceToScript","_ref2","removeIn","removeSequenceFromScript","_ref3","setScriptData","filtersDefault","Object","objectSpread","ids","exclude","and","initialFilterState","idsList","List","defineProperty","combineReducers","_combineReducers","toJS","WrappedComponent","wrappedComponentProps","propsJS","entries","reduce","newProps","wrappedComponentProp","Iterable","isIterable","react_default","createElement","connect","props","saveName","_useState","useState","_useState2","slicedToArray","edit","setEdit","className","InputGroup","FormControl","placeholder","aria-label","aria-describedby","defaultValue","onBlur","ev","currentTarget","onClick","saveAuthor","ScriptHeader","Jumbotron","scriptName","scriptAuthor","Character","charaStyle","Number","Badge","key","pill","variant","CharactersList","character","sequenceCharacter","assign","Part","extra","content","partHeader","concat","classes","PartList","part","components_part","Sequence","sequenceCharactersList","partsList","SequencesList","clas","reduced","components_sequence","ScriptView","this","fetchScripts","setScript","Nav","Link","to","scriptHeader","sequencesList","Component","ownProps","match","params","sequenceSource","beginDrag","DragSource","monitor","connectDragSource","dragSource","isDragging","DraggableSequencesList","draggableSequence","SequenceFilterIds","items","onChangeIds","react_select_esm","isMulti","idsToOption","onChange","els","el","options","itemsToOptions","itemToOption","keys","item","label","SequenceFilterBoolean","checked","setFilterIds","onChangeExclude","setFilterExclude","onChangeAnd","setFilterAnd","sequenceFilterIds","sequenceFilterBoolean","SequenceFilters","sequenceFilter","FullSequencesList","components_sequenceFilters","draggableSequenceList","deleteSequence","removeSequenceFromScriptAt","DropSequenceArea","_this$props","connectDropTarget","clasName","isOver","dropArea","DropTarget","drop","component","includeSequence","getItem","dropTarget","addSequenceToScriptAt","ScriptEditSequenceList","dropSequenceArea","scriptEditSequence","copyConsistentScript","fullSequencesList","scriptEditSequenceList","DragDropContext","HTML5Backend","ScriptCard","ScriptListContainer","_this","ListGroup","Item","scriptCard","Home","scriptList","Root","store","react_redux_es","BrowserRouter","Route","exact","path","ScriptEdit","middleware","thunkMiddleware","createStore","applyMiddleware","apply","render","router","document","getElementById"],"mappings":"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","file":"static/js/main.e2d95414.chunk.js","sourcesContent":["import { schema } from 'normalizr';\nimport { normalize } from 'normalizr'\n\n// Define a users schema\nconst characterSchema = new schema.Entity('characters');\n\nconst locationSchema = new schema.Entity('locations');\n\nconst typeSchema = new schema.Entity('types');\n\n// Define your comments schema\nconst partSchema = new schema.Entity('parts', {\n  characters: [characterSchema]\n});\n\n// Define your article\nconst sequenceSchema = new schema.Entity('sequences', {\n  location: locationSchema,\n  type: typeSchema,\n  parts: [partSchema]\n});\n\nconst sequencesListSchema = [sequenceSchema]\n\nconst normalizeSequencesData = data => normalize(data, sequencesListSchema)\n\nexport {normalizeSequencesData, sequenceSchema}\n","import { schema } from 'normalizr'\nimport { normalize } from 'normalizr'\n// import { sequenceSchema } from './sequence'\n\n// const scriptSequenceSchema = new schema.Entity('scriptSequences', {\n//   sequence: sequenceSchema\n// });\n\nconst scriptSchema = new schema.Entity('scripts', {\n  // scriptSequences: [scriptSequenceSchema]\n});\n\nconst scriptsListSchema = [scriptSchema]\n\nconst normalizeScriptData = (data) => {\n  return normalize(data, scriptsListSchema)\n}\n\nexport {normalizeScriptData}\n","import { Map } from 'immutable';\nimport { createSelector } from 'reselect';\n\n// Select entities from state\nconst getSequences = state => state.sequenceData.get('sequences')\nconst getParts = state => state.sequenceData.get('parts')\nconst getCharacters = state => state.sequenceData.get('characters')\nconst getLocations = state => state.sequenceData.get('locations')\nconst getTypes = state => state.sequenceData.get('types')\n\nconst getScripts = state => state.scriptData.get('scripts')\nconst getCurrentScriptId = (state) => state.scriptData.get('currentScript')\nconst getScriptSequences = state => state.scriptData.get('scriptSequences')\n\n// Select filter from state\nconst getSequenceFilters = state => state.sequenceFilters;\nconst getEntryListByname = (state, name) => state.sequenceData.get(name)\nconst getSequenceFilterByName = (state, name) => state.sequenceFilters.get(name)\n\nconst getSequenceCharacters = (sequence, parts) => {\n  let chars = sequence.get('parts').map(pid => parts.get(pid.toString()).get('characters'))\n  chars = chars.flatMap(c => c.valueSeq().toArray())\n  return chars.toSet().toList()\n}\n\nconst memoizedCharacters = createSelector(\n  getSequenceCharacters,\n  chars => chars\n)\n\nconst getFilteredSequences = createSelector(\n  getSequences,\n  getParts,\n  getCharacters,\n  getLocations,\n  getTypes,\n  getSequenceFilters,\n  getScripts,\n  getCurrentScriptId,\n  getScriptSequences,\n  ( sequences, parts, characters, locations, types, filters, scripts, currentScript, scriptSeqs) => {\n    if (!sequences || sequences.size === 0) return null;\n    let filtered = (\n      sequences\n        .sort((a, b) => a.get('id') < b.get('id') ? -1 : (a.get('id') > b.get('id') ? 1 : 0))\n        .filter((sequence) => {\n\n          return filters.keySeq().toArray().every( filterName => {\n            let field;\n            switch(filterName){\n              case 'characters':\n                field = memoizedCharacters(sequence, parts)\n                break\n              case 'locations':\n                field = [sequence.get('location')]\n                break\n              case 'types':\n                field = [sequence.get('type')]\n                break\n            }\n            return field && filterField(filters.get(filterName), field)\n          }) && !scripts\n                .getIn([currentScript.toString(), 'sequences'])\n                .some(sid => sid === sequence.get('id'))\n        })\n        .map((sequence) => mountSequence(sequence, types, locations, parts, characters))\n      )\n      return filtered.valueSeq().toList()\n  }\n)\n\n// const makeGetScriptFormatted = () => {\n  // return createSelector(\nconst getCurrentScriptFormatted = createSelector(\n    getCurrentScriptId,\n    getScripts,\n    getScriptSequences,\n    getSequences,\n    getParts,\n    getCharacters,\n    getLocations,\n    getTypes,\n    (scriptId, scripts, scriptSequences, sequences, parts, characters, locations, types) => {\n      if(!scriptId || !scripts || !sequences || sequences.size === 0) return null\n      const script = scripts.get(scriptId.toString())\n      return Map({\n        name: script.get('name'),\n        id: script.get('id'),\n        author: script.get('author'),\n        // sequences: script.get('scriptSequences').map((scriptSeqId, index) => {\n        sequences: script.get('sequences').map((seqId, index) => {\n          // const scriptSeq = scriptSequences.get(scriptSeqId.toString())\n          let seq = sequences.get(seqId.toString())\n          return mountSequence(seq, types, locations, parts, characters)\n          // return seq.set('index', scriptSeq.get('index'))\n        })\n      })\n    }\n  )\n// }\n\nconst mountSequence = (sequence, types, locations, parts, characters) => {\n  return Map({\n    id: sequence.get('id'),\n    type: types.get(sequence.get('type').toString()),\n    location: locations.get(sequence.get('location').toString()),\n    characters: memoizedCharacters(sequence, parts).map(charId => characters.get(charId.toString())),\n    parts: sequence.get('parts').map(partId => {\n      let p = parts.get(partId.toString())\n      let caracters = p.get('characters').map(charId => characters.get(charId.toString()))\n      return p.set('characters', caracters)\n    })\n  })\n}\n\n\n\nconst filterField =  (filter, field) => {\n  const filterIds = filter.get('ids')\n  if(!filterIds.size) return true\n\n  let shouldInclude = true\n  if(filter.get('and')){\n    shouldInclude = filterIds.every(id => field.includes(id))\n  } else {\n    shouldInclude = filterIds.some(id => field.includes(id))\n  }\n  if(filter.get('exclude')){\n    shouldInclude = !shouldInclude\n  }\n  return shouldInclude\n}\n\nexport { getCharacters, getLocations, getParts, getFilteredSequences, getSequenceFilterByName, getEntryListByname, getScripts , getSequences, getCurrentScriptId, getCurrentScriptFormatted};\n","import { normalizeScriptData} from '../schema'\nimport {getScripts} from '../selectors'\n\nexport const REQUEST_SCRIPTS = 'REQUEST_SCRIPTS'\nexport const RECEIVE_SCRIPTS = 'RECEIVE_SCRIPTS'\nexport const SET_CURRENT_SCRIPT = 'SET_CURRENT_SCRIPT'\nexport const ADD_SEQUENCE_TO_SCRIPT = 'ADD_SEQUENCE_TO_SCRIPT'\nexport const REMOVE_SEQUENCE_FROM_SCRIPT = 'REMOVE_SEQUENCE_FROM_SCRIPT'\nexport const CHANGE_SCRIPT_DATA = \"CHANGE_SCRIPT_DATA\"\n\nexport const requestScripts = () => ({\n  type: REQUEST_SCRIPTS\n})\n\nexport const receiveScripts = (data) => {\n  return ({\n    type: RECEIVE_SCRIPTS,\n    payload: data\n  })\n}\n\nexport const setCurrentScript = (id) => {\n  return ({\n    type: SET_CURRENT_SCRIPT,\n    payload: id\n  })\n}\n\nexport const addSequenceToScriptAt = (script, sequence, index) => ({\n  type: ADD_SEQUENCE_TO_SCRIPT,\n  payload: {\n    index,\n    sequence,\n    script\n  }\n})\n\nexport const removeSequenceFromScriptAt = (script, index) => ({\n  type: REMOVE_SEQUENCE_FROM_SCRIPT,\n  payload: {\n    index,\n    script\n  }\n})\n\nexport const changeScriptData = (script, field, value) => ({\n  type: CHANGE_SCRIPT_DATA,\n  payload: {\n    script,\n    field,\n    value\n  }\n})\n\nconst shouldFetchScripts = (state) => {\n  if(state.sequenceData.getIn(['loading', 'scripts'])){\n    return false\n  }\n  if(!getScripts(state)){\n    return true\n  }\n  return false\n}\n\nconst fetchScripts = () => dispatch => {\n  dispatch(requestScripts())\n  return fetch(`/scripts`, {\n    headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }})\n  .then(res => res.json())\n  .then(json => {\n    console.log(normalizeScriptData(json.data))\n    return dispatch(receiveScripts(normalizeScriptData(json.data)))\n  })\n}\n\nexport const fetchScriptsIfNeeded = name => (dispatch, getState) =>{\n  if(shouldFetchScripts(getState())){\n    return dispatch(fetchScripts())\n  }\n}\n\nexport const changeScriptName = (script, name) => (dispatch, getState) =>{\n  dispatch(changeScriptData(script, 'name', name))\n}\n\nexport const changeScriptAuthor = (script, name) => (dispatch, getState) =>{\n  dispatch(changeScriptData(script, 'author', name))\n}\n\nexport const setCurrentScriptId = id => (dispatch,getState)=>{\n  if(id){\n    return dispatch(setCurrentScript(id))\n  }\n}\n","import {normalizeSequencesData} from '../schema'\nimport {getSequences} from '../selectors'\n\nexport const SET_FILTER_IDS = 'SET_FILTER_IDS'\nexport const SET_FILTER_EXCLUDE = 'SET_FILTER_EXCLUDE'\nexport const SET_FILTER_AND = 'SET_FILTER_AND'\nexport const REQUEST_SEQUENCES = 'REQUEST_SEQUENCES'\nexport const RECEIVE_SEQUENCES = 'RECEIVE_SEQUENCES'\n\n\nexport const setFilterIds = (name, ids) => ({\n    type: SET_FILTER_IDS,\n    payload: {\n      name: name,\n      field: 'ids',\n      value: ids\n    }\n})\n\nexport const setFilterExclude = (name, exclude) => ({\n    type: SET_FILTER_EXCLUDE,\n    payload: {\n      name: name,\n      field: 'exclude',\n      value: exclude\n    }\n})\n\nexport const setFilterAnd = (name, and) => ({\n    type: SET_FILTER_EXCLUDE,\n    payload: {\n      name: name,\n      field: 'and',\n      value: and\n    }\n})\n\nexport const requestSequences = () => ({\n  type: REQUEST_SEQUENCES\n})\n\nexport const receiveSequences = (data) => {\n  return ({\n    type: RECEIVE_SEQUENCES,\n    payload: data\n  })\n}\n\nconst fetchSequences = () => dispatch => {\n  dispatch(requestSequences())\n  return fetch(`/sequences`, {\n    headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }})\n  .then(res => res.json())\n  .then(json => {\n    return dispatch(receiveSequences(normalizeSequencesData(json.data)))\n  })\n}\n\nconst shouldFetchSequences = (state) => {\n  if(state.sequenceData.getIn(['loading', 'sequence'])){\n    return false\n  }\n  if(!getSequences(state)){\n    return true\n  }\n  return false\n}\n\nexport const fetchSequencesifNeeded = name => (dispatch, getState) =>{\n  if(shouldFetchSequences(getState())){\n    return dispatch(fetchSequences())\n  }\n}\n","import { fromJS } from 'immutable'\n\nimport {\n  REQUEST_SEQUENCES,\n  RECEIVE_SEQUENCES,\n} from '../actions'\n\nexport const STATE_KEY = 'sequenceData'\n\nconst initialSequencesState = fromJS({loading:  false});\n\nconst reducer = (state = initialSequencesState, action) => {\n  switch (action.type){\n    case REQUEST_SEQUENCES:\n      return state.set('loading', true)\n    case RECEIVE_SEQUENCES:\n      let newState = state.set('loading', false)\n      return newState.mergeDeep(fromJS(action.payload.entities))\n    default:\n      return state\n  }\n}\n\n\nexport default reducer\n","import { fromJS } from 'immutable'\n\nimport {\n  REQUEST_SCRIPTS,\n  RECEIVE_SCRIPTS,\n  SET_CURRENT_SCRIPT,\n  ADD_SEQUENCE_TO_SCRIPT,\n  REMOVE_SEQUENCE_FROM_SCRIPT,\n  CHANGE_SCRIPT_DATA\n} from '../actions'\n\nexport const STATE_KEY = 'scriptData'\n\nconst initialScriptState = fromJS({loading: false, currentScript: null});\n\nconst reducer = (state = initialScriptState, action) => {\n  switch (action.type){\n    case SET_CURRENT_SCRIPT:\n      return state.set('currentScript', action.payload)\n    case REQUEST_SCRIPTS:\n      return state.set( 'loading', true)\n    case RECEIVE_SCRIPTS:\n      let newState = state.set('loading', false)\n      return newState.mergeDeep(fromJS(action.payload.entities))\n    case ADD_SEQUENCE_TO_SCRIPT:\n      return includeNewSequenceToScript(state, action.payload)\n    case REMOVE_SEQUENCE_FROM_SCRIPT:\n      return removeSequenceFromScript(state, action.payload)\n    case CHANGE_SCRIPT_DATA:\n      return setScriptData(state, action.payload)\n    default:\n      return state\n  }\n}\n\nfunction includeNewSequenceToScript (state, {index, sequence, script}) {\n  const newSeqList = state.getIn(['scripts', script.toString(), 'sequences']).insert(index,sequence)\n  return state.setIn(['scripts', script.toString(), 'sequences'], newSeqList)\n}\n\nfunction removeSequenceFromScript(state, {index, script}) {\n  return state.removeIn(['scripts', script.toString(), 'sequences', index])\n}\n\nfunction setScriptData(state, {script, field, value}){\n  return state.setIn(['scripts', script.toString(), field], value)\n}\n\nexport default reducer\n","import { fromJS, List } from 'immutable'\n\nimport {\n  SET_FILTER_IDS,\n  SET_FILTER_EXCLUDE,\n  SET_FILTER_AND\n} from '../actions'\n\nexport const STATE_KEY = 'sequenceFilters'\n\n\nconst createDefaultFilter = ()=> ({\n  ids:[],\n  exclude:false\n})\n\nconst filtersDefault = {\n  characters:{\n    ...createDefaultFilter(),\n    and: true\n  },\n  types: createDefaultFilter(),\n  locations: createDefaultFilter()\n}\n\nconst initialFilterState = fromJS(filtersDefault);\n\nconst reducer = (state = initialFilterState, action) => {\n  switch(action.type){\n    case SET_FILTER_IDS:\n      const idsList = List(action.payload.value)\n      return state.setIn([action.payload.name, action.payload.field], idsList)\n    case SET_FILTER_EXCLUDE:\n    case SET_FILTER_AND:\n      return state.mergeDeep({\n        [action.payload.name]: {\n          [action.payload.field]: action.payload.value\n        }\n      })\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { combineReducers } from 'redux';\nimport sequenceData, { STATE_KEY as SEQUENCE_DATA_STATE_KEY } from './sequenceData';\nimport scriptData, { STATE_KEY as SCRIPT_DATA_STATE_KEY } from './scriptData';\nimport sequenceFilters, { STATE_KEY as SEQUENCE_FILTERS_STATE_KEY } from './sequenceFilters';\n\nconst reducer = combineReducers({\n  [SEQUENCE_DATA_STATE_KEY]: sequenceData,\n  [SEQUENCE_FILTERS_STATE_KEY]: sequenceFilters,\n  [SCRIPT_DATA_STATE_KEY]: scriptData\n});\n\nexport default reducer;\n","import React from 'react'\nimport { Iterable } from 'immutable'\n\nexport const toJS = WrappedComponent => wrappedComponentProps => {\n  const KEY = 0\n  const VALUE = 1\n\n  const propsJS = Object.entries(wrappedComponentProps).reduce(\n    (newProps, wrappedComponentProp) => {\n      newProps[wrappedComponentProp[KEY]] = Iterable.isIterable(\n        wrappedComponentProp[VALUE]\n      )\n        ? wrappedComponentProp[VALUE].toJS()\n        : wrappedComponentProp[VALUE]\n      return newProps\n    },\n    {}\n  )\n\n  return <WrappedComponent {...propsJS} />\n}\n","import React, { useState } from 'react'\nimport {connect} from 'react-redux'\nimport {toJS} from '../utils/immutableToJS'\nimport {InputGroup, FormControl} from 'react-bootstrap'\nimport {changeScriptName} from '../actions'\n\n\nconst ScriptName = ({name, id, saveName}) => {\n  const [edit, setEdit] = useState(false)\n\n  return (\n      <div className=\"ScriptName\">\n        { edit &&\n          <InputGroup className=\"mb-3\">\n            <FormControl\n             placeholder=\"Script's name\"\n             aria-label=\"Script's name\"\n             aria-describedby=\"basic-addon2\"\n             defaultValue={name}\n             onBlur={(ev)=>{\n               saveName(ev.currentTarget.value)\n               setEdit(false)\n             }}/>\n            </InputGroup>\n        }\n        {!edit &&\n          <h3 onClick={()=> setEdit(true)}>{name}</h3>\n        }\n      </div>\n  )\n}\n\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  saveName:(value)=>dispatch(changeScriptName(props.id, value))\n})\n\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(toJS(ScriptName))\n","import React, { useState } from 'react'\nimport {connect} from 'react-redux'\nimport {toJS} from '../utils/immutableToJS'\nimport {InputGroup, FormControl} from 'react-bootstrap'\nimport {changeScriptAuthor} from '../actions'\n\n\nconst ScriptAuthor = ({author, id, saveAuthor}) => {\n  const [edit, setEdit] = useState(false)\n\n  return (\n      <div className=\"ScriptName\">\n        { edit &&\n          <InputGroup className=\"mb-3\">\n            <FormControl\n             placeholder=\"Script's author\"\n             aria-label=\"Script's author\"\n             aria-describedby=\"basic-addon2\"\n             defaultValue={author}\n             onBlur={(ev)=>{\n               saveAuthor(ev.currentTarget.value)\n               setEdit(false)\n             }}\n            />\n            </InputGroup>\n        }\n        {!edit &&\n          <div onClick={()=> setEdit(true)}>{author}</div>\n        }\n      </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  saveAuthor:(value)=>dispatch(changeScriptAuthor(props.id, value))\n})\n\n\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(toJS(ScriptAuthor))\n","import React from 'react'\nimport {Jumbotron} from 'react-bootstrap'\nimport ScriptName from './scriptName'\nimport ScriptAuthor from './scriptAuthor'\n\nconst ScriptHeader = ({name, author, id }) => {\n  return (\n    <Jumbotron className=\"ScriptHeaderView\">\n      <ScriptName name={name} id={id}  />\n      <ScriptAuthor author={author} id={id} />\n    </Jumbotron>\n  )\n}\n\nexport default ScriptHeader\n","import React from 'react'\nimport {Badge} from 'react-bootstrap'\n\nconst Character = ({id, name})=> {\n  const charaStyle = (Number(id) -1)%6;\n  const styles = [\"danger\", \"secondary\", \"success\", \"primary\", \"warning\", \"info\", \"light\" , \"dark\"];\n  return <Badge key={id} pill variant={styles[charaStyle]}>{name}</Badge>\n}\n export default Character\n","import React from 'react'\nimport SequenceCharacter from './sequenceCharacter'\n\nconst CharactersList = ({characters})=>(\n  <div className=\"charactersList light\">\n    {characters.map((character,index)=>(\n      <SequenceCharacter key={index} {...character}></SequenceCharacter>\n    ))}\n  </div>\n)\n\nexport default CharactersList\n","import React from 'react';\n\nconst Part = ({type, name, characters, extra, content}) => {\n  let partHeader = '';\n  if(type === 'dialogue'){\n    partHeader += characters[0].name\n  }\n  if(extra){\n    partHeader += ` ${extra}`\n  }\n\n  let classes = \"partContent\";\n  if(type === 'observation'){\n    classes += \" light\";\n  }\n\n  return (\n    <div className=\"partContainer\">\n      {partHeader && partHeader.length > 0 &&\n        <div className=\"partHeader\">{partHeader}</div>\n      }\n      <div className={classes}>{content}</div>\n    </div>\n  )\n}\n\nexport default Part\n","import React from 'react'\nimport Part from './part'\n\nconst PartList = ({parts}) => (\n  <div className=\"partsContanier\">\n  {parts.map((part,index)=>(\n    <Part key={index} {...part}></Part>\n  ))}\n  </div>\n)\n\nexport default PartList\n","import React from 'react'\nimport SequenceCharactersList from './sequenceCharactersList'\nimport PartsList from './partsList'\n\nconst Sequence = ({type, location, id, characters, parts}) => {\n  let clas= \"SequenceContainer\";\n\n  return (\n    <div className={clas}>\n      <div className=\"SequenceTitle\">{type.name} - {location.name} <span className=\"light\">#{id}</span></div>\n      {characters && characters.length > 0 &&\n        <div className=\"charactersList light\">\n          <SequenceCharactersList characters={characters} />\n        </div>\n      }\n      <div className=\"partsContanier\">\n        <PartsList parts={parts} />\n      </div>\n    </div>\n  )\n}\n\nexport default Sequence\n","import React from 'react'\nimport Sequence from './sequence'\n\nconst SequencesList = ({sequences, reduced}) =>{\n  let clas = \"Screenplay\"\n  if(reduced){\n    clas += \" reduced\";\n  }\n  return(\n    <div className={clas}>\n      {sequences && sequences.map((seq, index)=>(\n        <Sequence key={index} {...seq}></Sequence>\n      ))}\n    </div>\n  )\n}\n\nexport default SequencesList\n","import React, {Component} from 'react'\nimport ScriptHeader from './scriptHeader'\nimport SequencesList from './sequencesList'\nimport {connect} from 'react-redux'\nimport {toJS} from '../utils/immutableToJS'\nimport {fetchScriptsIfNeeded, fetchSequencesifNeeded, setCurrentScriptId} from '../actions'\nimport {getCurrentScriptFormatted} from '../selectors'\nimport {Link} from 'react-router-dom'\nimport {Nav} from 'react-bootstrap'\n\n\nimport '../app.css'\n\nclass ScriptView extends Component {\n  componentDidMount(){\n    this.props.fetchScripts()\n    this.props.fetchSequences()\n    this.props.setScript()\n  }\n  render(){\n    return (\n      <div className=\"scriptView\">\n        <Nav>\n          <Link to=\"/\">Home</Link>\n        </Nav>\n        {this.props.script &&\n          <div>\n            <ScriptHeader {...this.props.script} />\n            <div className=\"scriptEditorSequencesContainer\">\n              <section className=\"scriptContainer\">\n                {this.props.script && this.props.script.sequences.length &&\n                  <SequencesList sequences={this.props.script.sequences} reduced={false} />\n                }\n              </section>\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state,props) => {\n  return {\n    script: getCurrentScriptFormatted(state)\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  fetchScripts: ()=>dispatch(fetchScriptsIfNeeded()),\n  fetchSequences: ()=>dispatch(fetchSequencesifNeeded()),\n  setScript: ()=>dispatch(setCurrentScriptId(ownProps.match.params.id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(toJS(ScriptView))\n","import React from 'react'\nimport { DragSource } from 'react-dnd'\nimport Sequence from './sequence'\n\nconst sequenceSource = {\n  beginDrag(props) {\n    console.log(props)\n    return {\n      seqId: props.sequence.id\n    };\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  }\n}\n\nfunction DraggableSequence({ connectDragSource, isDragging, sequence }) {\n  return connectDragSource(\n    <div className=\"dragContainer\">\n      <Sequence key={sequence.id} {...sequence}></Sequence>\n    </div>\n  );\n}\n\nexport default DragSource(\"sequence\", sequenceSource, collect)(DraggableSequence);\n","import React from 'react'\nimport DraggableSequence from './draggableSequence'\n\nconst DraggableSequencesList = ({sequences}) =>{\n  return(\n    <div className=\"Screenplay reduced\">\n      {sequences && sequences.map((seq, index)=>(\n        <DraggableSequence key={index} sequence={seq}></DraggableSequence>\n      ))}\n    </div>\n  )\n}\n\nexport default DraggableSequencesList\n","import React from 'react'\nimport Select from 'react-select'\n\nconst SequenceFilterIds = ({filter, items, onChangeIds}) => {\n  return (\n      <Select\n       isMulti = 'true'\n       value={idsToOption(items, filter.ids)}\n       onChange={els => onChangeIds(els.map(el => el.value))}\n       options={itemsToOptions(items)}\n     />\n  )\n}\nexport default SequenceFilterIds\n\nconst idsToOption = (items, ids) => {\n  if(ids && ids.length){\n    return ids.map(id => {\n       return itemToOption(items[id.toString()])\n    })\n  }\n}\n\nconst itemsToOptions = (items) => {\n  if(items && Object.keys(items).length){\n    return Object.keys(items).map(key => itemToOption(items[key]))\n  }\n}\n\nconst itemToOption = (item) => ({\n  label: item.name,\n  value: item.id\n})\n","import React from 'react'\n\nconst SequenceFilterBoolean = ({filter, field, onChange}) => {\n  return (\n    <label className=\"btn btn-default\">\n      <input\n        type=\"checkbox\"\n        name={field} id={field}\n        value=\"true\"\n        checked ={filter[field]}\n        onChange={ev => onChange(ev.currentTarget.checked)}/>\n      {field}\n    </label>\n  )\n}\nexport default SequenceFilterBoolean\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {setFilterIds, setFilterExclude, setFilterAnd} from '../actions'\nimport {getEntryListByname, getSequenceFilterByName} from '../selectors'\nimport SequenceFilterIds from './sequenceFilterIds'\nimport SequenceFilterBoolean from './sequenceFilterBoolean'\nimport {toJS} from '../utils/immutableToJS'\n\n\nconst SequenceFilter = (props) => {\n  const filter = props.filter\n  return (\n    <div className=\"FilterContainer\">\n      <div className=\"FilterTitle\">{props.name}</div>\n        <SequenceFilterIds {...props} />\n        { filter.ids && filter.ids.length > 0 &&\n          <div className=\"btn-group\">\n            <SequenceFilterBoolean\n              filter={filter}\n              field=\"exclude\"\n              onChange={props.onChangeExclude} />\n              { Object.keys(filter).includes('and') && filter.ids.length > 1 &&\n                <SequenceFilterBoolean\n                  filter={filter}\n                  field=\"and\"\n                  onChange={props.onChangeAnd} />\n              }\n          </div>\n        }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return ({\n    items: getEntryListByname(state, ownProps.name),\n    filter: getSequenceFilterByName(state, ownProps.name)\n  })\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onChangeIds: (ids)=>{\n    dispatch(setFilterIds(ownProps.name, ids))\n  },\n  onChangeExclude: (exclude) =>{\n    dispatch(setFilterExclude(ownProps.name, exclude))\n  },\n  onChangeAnd: (and)=>{\n    dispatch(setFilterAnd(ownProps.name, and))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(toJS(SequenceFilter))\n","import React from 'react'\nimport SequenceFilter from './sequenceFilter'\n\nconst SequenceFilters = (props)=>{\n  return (\n    <section className=\"FiltersContainer\">\n      <SequenceFilter name='characters' key={1}></SequenceFilter>\n      <SequenceFilter name='types' key={2}></SequenceFilter>\n      <SequenceFilter name='locations' key={3}></SequenceFilter>\n    </section>\n  )\n}\n\nexport default SequenceFilters\n","import React, {Component} from 'react'\nimport DraggableSequencesList from './draggableSequenceList'\nimport SequenceFilters from './sequenceFilters'\nimport {connect} from 'react-redux'\nimport {fetchSequencesifNeeded} from '../actions'\nimport {getFilteredSequences} from '../selectors'\nimport {toJS} from '../utils/immutableToJS'\n\n\nclass FullSequencesList extends Component{\n  componentDidMount(){\n    this.props.fetchSequences()\n  }\n  render(){\n    return (\n      <div className=\"ScreenplayContainer\">\n        <SequenceFilters />\n        <DraggableSequencesList sequences={this.props.sequences}></DraggableSequencesList>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  sequences: getFilteredSequences(state)\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  fetchSequences: ()=> dispatch(fetchSequencesifNeeded())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(toJS(FullSequencesList))\n","import React from 'react'\nimport Sequence from './sequence'\nimport {connect} from 'react-redux'\nimport {getCurrentScriptId} from '../selectors'\nimport {toJS} from '../utils/immutableToJS'\nimport {removeSequenceFromScriptAt} from '../actions'\n\n\nconst ScriptEditSequence = ({sequence, deleteSequence, index, script}) => {\n\n  return (\n    <div className=\"sequenceWrapper\">\n      <button className=\"deleteSequence\" onClick={()=>deleteSequence(script, index)}>X</button>\n      <Sequence key={index} {...sequence}></Sequence>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, props) => ({\n  script: getCurrentScriptId(state)\n})\n\nconst mapDispatchToProps = (dispatch, props) =>({\n  deleteSequence: (script, index) => dispatch(removeSequenceFromScriptAt(script, index))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(toJS(ScriptEditSequence))\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { DropTarget } from 'react-dnd'\nimport {addSequenceToScriptAt} from '../actions'\nimport {getCurrentScriptId} from '../selectors'\n\nconst sequenceTarget = {\n  drop({index}, monitor, component) {\n    component.props.includeSequence(\n      monitor.getItem().seqId,\n      component.props.script,\n      component.props.index\n    )\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  };\n}\n\n//transform in connected class to have access to dispatch method\nclass DropSequenceArea extends Component {\n  render(){\n    let { connectDropTarget, isOver } = this.props\n    let clasName = isOver ? 'droparea over' : 'droparea'\n    return connectDropTarget(\n      <div className={clasName}></div>\n    )\n  }\n}\n\nconst mapStateToProps= (state,props) => {\n  return {\n    script: getCurrentScriptId(state)\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  includeSequence: (seq, script, index)=>{\n    dispatch(addSequenceToScriptAt(script, seq, index))\n  }\n})\n\nconst dropArea = DropTarget('sequence', sequenceTarget, collect)(DropSequenceArea);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(dropArea)\n","import React from 'react'\nimport ScriptEditSequence from './scriptEditSequence'\nimport DropSequenceArea from './dropSequenceArea'\n// import ScriptEditSequence from './draggableSequence'\n\nconst ScriptEditSequenceList = ({sequences}) =>{\n  return(\n    <div className=\"Screenplay reduced\">\n      {sequences && sequences.map((seq, index)=>(\n        <div key={index}>\n          <DropSequenceArea index={index}></DropSequenceArea>\n          <ScriptEditSequence  sequence={seq} index={index}></ScriptEditSequence>\n        </div>\n      ))}\n      <DropSequenceArea index={sequences.length}></DropSequenceArea>\n    </div>\n  )\n}\n\nexport default ScriptEditSequenceList\n","import React, {Component} from 'react'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport FullSequencesList from './fullSequencesList'\nimport ScriptHeader from './scriptHeader'\nimport ScriptEditSequenceList from './scriptEditSequenceList'\nimport {connect} from 'react-redux'\nimport {toJS} from '../utils/immutableToJS'\nimport {fetchScriptsIfNeeded, fetchSequencesifNeeded, setCurrentScriptId} from '../actions'\nimport {getCurrentScriptFormatted} from '../selectors'\nimport {Link} from 'react-router-dom'\nimport {Nav} from 'react-bootstrap'\n\nimport '../app.css'\n\nclass ScriptView extends Component {\n  componentDidMount(){\n    this.props.fetchScripts()\n    this.props.fetchSequences()\n    this.props.setScript()\n    this.props.copyConsistentScript()\n  }\n  render(){\n    return (\n      <div className=\"scriptView\">\n        <Nav>\n          <Link to=\"/\">Home</Link>\n        </Nav>\n        {this.props.script &&\n          <div>\n            <ScriptHeader {...this.props.script} />\n            <div className=\"scriptEditorSequencesContainer\">\n              <section className=\"sequencePicker\">\n                <FullSequencesList />\n              </section>\n              <section className=\"scriptContainer\">\n                {this.props.script && this.props.script.sequences.length &&\n                  <ScriptEditSequenceList sequences={this.props.script.sequences} />\n                }\n              </section>\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state,props) => {\n  return {\n    script: getCurrentScriptFormatted(state)\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  fetchScripts: ()=>dispatch(fetchScriptsIfNeeded()),\n  fetchSequences: ()=>dispatch(fetchSequencesifNeeded()),\n  setScript: ()=>dispatch(setCurrentScriptId(props.match.params.id)),\n  copyConsistentScript: ()=>console.log('dispatch action to store consistent script')\n})\n\nexport default DragDropContext(HTML5Backend)(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(toJS(ScriptView)))\n","import React from 'react'\n\n\nconst ScriptCard = ({name, sequences, id, author}) => {\n  return (\n    <div className=\"ScriptCardContainer\">\n      <h3 className=\"ScriptCardTile\">{name}</h3>\n      <div className=\"ScriptCardInfo\">\n        <div className=\"ScriptCardAuthorContainer\">\n          <span>author </span>\n          <span className=\"label label-default\">{author}</span>\n        </div>\n        <div className=\"ScriptCardSequenceCount\">\n          <span>{sequences.length} {sequences.length === 1 ? 'sequence' : 'sequences'}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ScriptCard\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {toJS} from '../utils/immutableToJS'\nimport {fetchScriptsIfNeeded} from '../actions'\nimport {getScripts} from '../selectors'\nimport ScriptCard from './scriptCard'\nimport {Link} from 'react-router-dom'\nimport {ListGroup} from 'react-bootstrap'\n\n\nclass ScriptListContainer extends Component{\n  componentDidMount(){\n    this.props.fetchScripts()\n  }\n\n  render(){\n    return (\n      <ListGroup>\n        { this.props.scripts && Object.keys(this.props.scripts).map((index) => (\n          <ListGroup.Item key={index}>\n          <Link to={`${index}/edit`}>\n            <ScriptCard key={index} {...this.props.scripts[index]} onClick={this.props.onClick} />\n          </Link>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return{\n    scripts: getScripts(state)\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  fetchScripts: ()=> dispatch(fetchScriptsIfNeeded())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(toJS(ScriptListContainer))\n","import React from 'react'\nimport ScriptList from './scriptList'\nimport '../home.css'\n\nconst Home = () => {\n\n  return (\n    <div className=\"Home\">\n      <h1>List of Scripts</h1>\n      <ScriptList />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport ScriptView from '../components/scriptView'\nimport ScriptEdit from '../components/scriptEdit'\nimport Home from '../components/home'\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Route exact={true} path=\"/\" component={Home} />\n        <Route exact={true} path=\"/new\" component={ScriptView} />\n        <Route exact={true} path=\"/:id/edit\" component={ScriptEdit} />\n        <Route exact={true} path=\"/:id\" component={ScriptView} />\n      </div>\n    </Router>\n  </Provider>\n)\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired\n}\n\nexport default Root\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\n// import { Provider } from 'react-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './reducers'\nimport Root from './router'\n\nconst middleware = [ thunkMiddleware ]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n)\n\nrender(\n  <Root store={store} />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}